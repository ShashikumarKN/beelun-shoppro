package com.beelun.shoppro.model;

import java.io.File;

import com.beelun.shoppro.SuperContainer;
import com.beelun.shoppro.model.type.TemplateTypeEnum;

public class Template extends BaseObject {
	private static final long serialVersionUID = -4340910860072293433L;
	
	private Long id;
	
	/**
	 * Human readable name of this template. Unique
	 */
	private String name;
	
	/**
	 * This is automatically generated by system. Won't be shown in front end 
	 */
	private String fileNamePrefix = null;
	
	private String description;
	
	/**
	 * Content of this template. DB and file system keep two same copies.
	 */
	private String templateContent;
	private TemplateTypeEnum templateType;	
	
	public Template() {}
	
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getDescription() {
		return description;
	}
	public void setDescription(String description) {
		this.description = description;
	}
	public TemplateTypeEnum getTemplateType() {
		return templateType;
	}
	public void setTemplateType(TemplateTypeEnum templateType) {
		this.templateType = templateType;
	}
	
	public String getFileAbsolutePath()
	{
		String pathSep = File.separator; // Make it system independent
		return SuperContainer.BaseDir + pathSep +"uploads" + pathSep + "template" + pathSep + getFileNamePrefix() + ".ftl";
	}
	
	public String getFMPath()
	{
		String pathSep = "/"; // TOTO: would this works on all platform? say win and linux?
		return "uploads" + pathSep + "template" + pathSep + getFileNamePrefix();		
	}

	public void setFileNamePrefix(String fileNamePrefix) {
		this.fileNamePrefix = fileNamePrefix;
	}

	public String getFileNamePrefix() {
		return fileNamePrefix;
	}

	public String getTemplateContent() {
		return templateContent;
	}

	public void setTemplateContent(String templateContent) {
		this.templateContent = templateContent;
	}
	
}
